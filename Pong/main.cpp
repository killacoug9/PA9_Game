// This example will use SFML libraries to implement
// the game of Pong

// History: 4/16 - Started from the SFML tutorial code that draws
//                a circle in the window.

#include <SFML/Graphics.hpp>
#include <SFML/System.hpp>
#include <fstream>

//#include "Client.hpp"
#include "Server.hpp"
#include "MainMenu.hpp"

//#define WINDOW_WIDTH 960
//#define WINDOW_HEIGHT 540

// screen is blacked out for x seconds while hiders hide...

/// note to self::  when you start program you are a client with a socket.. when you actually start a game you get a player constructed which is an entity 
// ? when do I assign a userNumber/name/userID

// should i use TCP or UDP???

// will have a menu,[and then a you will connect to a lobby], and then you will go into a game

// someone will be host(preferably beefy computer), and the host will have server and client, others will jsut have client
#define SERVER_LOCAL_IP "10.219.207.40"
//#define SERVER_LOCAL_IP "10.220.45.9"


std::fstream outfile; // global scope cuzz fucc it why not

int main()
{

	//	const int WINDOW_WIDTH = 960; // change in MainMenu.hpp
	//	const int WINDOW_HEIGHT = 540;

		//make a window
	sf::RenderWindow HomeScreenWindow(sf::VideoMode(WINDOW_WIDTH, WINDOW_HEIGHT), "Main Menu", sf::Style::Default);

	MainMenu menuButtons(HomeScreenWindow.getSize().x, HomeScreenWindow.getSize().y);

	////photo to main menu background




	while (HomeScreenWindow.isOpen()) {
		sf::Event event;
		menuButtons.runMenuScreen(HomeScreenWindow, event);
		
		HomeScreenWindow.clear();
		HomeScreenWindow.draw(menuButtons.getBackgroundPicture());
		menuButtons.drawTextButtons(HomeScreenWindow);
		HomeScreenWindow.display();
		//cout << "d in m" << endl;
	}

	

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	

	return 0;
}

// lets say you click ------HOST GAME----
	// it will create a server Object, because you are hosting the server.(possibly on another thread??)
	// it should display your local IP address..
	// 
		// then the other players can click ---Join Game--- and type in that IP address, and click 'join'
		// then the client obj will run connectToServer // and display a message if the server gets connected and sends a message back saying its successful

// should the packets be blocking or non-blocking??
// a packet will have a message to client, and also data conatining 4 entities and their postions(etc), and also the state of the game